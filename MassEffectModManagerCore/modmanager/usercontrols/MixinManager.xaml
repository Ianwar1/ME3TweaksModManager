<local:MMBusyPanelBase x:Class="MassEffectModManagerCore.modmanager.usercontrols.MixinManager"
                       DataContext="{Binding RelativeSource={RelativeSource Self}}"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:MassEffectModManagerCore.modmanager.usercontrols" mc:Ignorable="d" xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI" xmlns:converters="clr-namespace:MassEffectModManagerCore.modmanager.converters" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:fa="http://schemas.fontawesome.io/icons/" d:DesignHeight="450" d:DesignWidth="800" Width="700" Height="500">
    <DockPanel MaxWidth="700">
        <DockPanel DockPanel.Dock="Bottom" Margin="0,5,0,0">
            <Button MinWidth="70" Content="{DynamicResource string_close}" Margin="5,0,0,0" Command="{Binding CloseCommand}" Padding="7,4" DockPanel.Dock="Right" />
            <xctk:DropDownButton Name="CompilePanelButton" MinWidth="70" Margin="5,0,0,0" Content="{DynamicResource string_compileEllipses}" IsEnabled="{Binding AtLeastOneMixinSelected}" Padding="7,4" DockPanel.Dock="Right">
                <xctk:DropDownButton.DropDownContent>
                    <StackPanel Width="400">
                        <!-- New mod -->
                        <TextBlock Text="{DynamicResource string_compileIntoANewMod}" FontWeight="Bold" />
                        <TextBlock Text="{DynamicResource string_modNameColon}" />
                        <xctk:WatermarkTextBox Watermark="{DynamicResource string_modName}" Text="{Binding NewModName, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding OperationInProgress, Converter={StaticResource BoolEnabledConverter}, ConverterParameter='Not'}" KeyDown="ModName_OnKeyDownHandler" />
                        <Button Content="{DynamicResource string_compileAsANewMod}" HorizontalAlignment="Right" ToolTip="{DynamicResource string_tooltip_generatesNewMod}" Command="{Binding CompileAsNewModCommand}" Margin="0,3,0,0" />
                        <StackPanel>
                            <!-- OR -->
                            <TextBlock Text="{DynamicResource string_or}" FontWeight="Bold" TextAlignment="Center" Margin="0,20" />
                            
                            <!-- Install into game -->
                            <TextBlock Text="{DynamicResource string_directlyInstallIntoGame}" FontWeight="Bold"/>
                            <local:TargetSelector 
                                      IsEnabled="{Binding OperationInProgress, Converter={StaticResource BoolEnabledConverter}, ConverterParameter='Not'}" 
                                      AvailableTargets="{Binding AvailableInstallTargets}" 
                                      SelectedGameTarget="{Binding SelectedInstallTarget}" 
                                      HorizontalContentAlignment="Stretch"/>

                            <Button Content="{DynamicResource string_compileIntoExistingMod}" HorizontalAlignment="Right" ToolTip="{DynamicResource string_tooltip_appliesMixinsToAMod}" Command="{Binding InstallIntoGameCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </xctk:DropDownButton.DropDownContent>
            </xctk:DropDownButton>
            <TextBlock Text="{Binding BottomLeftMessage}" VerticalAlignment="Center" HorizontalAlignment="Left" />
        </DockPanel>
        <ProgressBar DockPanel.Dock="Bottom" Maximum="{Binding ProgressBarMax}" Value="{Binding ProgressBarValue}" Height="8" />
        <Grid IsEnabled="{Binding OperationInProgress, Converter={StaticResource BoolEnabledConverter}, ConverterParameter='Not'}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" MinWidth="140" MaxWidth="450" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" MinWidth="50" />
                <!--<ColumnDefinition Width="7"/>-->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="3" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="3" />
            </Grid.RowDefinitions>
            <!-- Header Panel -->
            <TextBlock Text="{DynamicResource string_mixinLibrary}" Grid.Row="1" Grid.Column="0" TextAlignment="Center" Grid.ColumnSpan="4" FontSize="22" FontWeight="Bold" />
            <TextBlock Text="{DynamicResource string_header_mixinsArePremadePatches}" TextWrapping="Wrap" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" TextAlignment="Center" />
            <Separator Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="6" Margin="0,5" />
            <DockPanel Grid.Row="5" Grid.Column="0">
                <TextBlock DockPanel.Dock="Top" Text="{DynamicResource string_availableMixins}" FontWeight="Bold" />
                <ListBox Name="MixinList_ListBox" ItemsSource="{Binding AvailableOfficialMixins}" 
                         SelectedItem="{Binding SelectedMixin}" IsTextSearchEnabled="True" TextSearch.TextPath="PatchName"
                         VirtualizingStackPanel.IsVirtualizing="True"
                         VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding UISelectedForUse}" IsEnabled="{Binding CanBeUsed}" />
                                <fa:ImageAwesome Icon="Lock" Foreground="Red" Visibility="{Binding IsFinalizer, Converter={StaticResource BoolToVisibilityConverter}}" Height="12" Width="16" ToolTip="{DynamicResource string_tooltip_thisMixinIsAFinalizer}" />
                                <TextBlock Text="{Binding PatchName}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CanBeUsed}" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </VirtualizingStackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.Resources>
                        <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                            <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxWithoutRippleStyle}" />
                        </Style>
                    </ListBox.Resources>
                    <ListBox.InputBindings>
                        <KeyBinding Key="Space" Command="{Binding ToggleSelectedMixinCommand}" />
                    </ListBox.InputBindings>
                </ListBox>
            </DockPanel>
            <GridSplitter Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" />
            <DockPanel Grid.Row="5" Grid.Column="2">
                <TextBlock DockPanel.Dock="Top" Text="{DynamicResource string_patchDescription}" FontWeight="Bold" />
                <TextBox IsReadOnly="True" IsReadOnlyCaretVisible="False" Text="{Binding SelectedMixin.UIText, Mode=OneWay}" TextWrapping="Wrap" VerticalContentAlignment="Top" HorizontalContentAlignment="Left" />
            </DockPanel>
        </Grid>
    </DockPanel>
</local:MMBusyPanelBase>